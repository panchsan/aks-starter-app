trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'dockerwebapp'
  acrName: 'aksdemoreg'
  tag: '$(Build.BuildId)'

stages:
- stage: BuildAndPush
  jobs:
  - job: BuildAndPushImages
    steps:
    - checkout: self

    - task: DockerCompose@1
      displayName: 'Build services'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'sc-demo-pipelines-linux-app'
        projectName: '$(imageName)'
        azureContainerRegistry: '{"loginServer":"$(acrName).azurecr.io", "id" : "/subscriptions/edf6dd9d-7c4a-4bca-a997-945f3d60cf4e/resourceGroups/RG-Global-SantanuPanchadhyay-Appteam/providers/Microsoft.ContainerRegistry/registries/$(acrName)"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'

    - script: |
        docker tag $(acrName).azurecr.io/$(imageName):latest $(acrName).azurecr.io/$(imageName):$(tag)
      displayName: 'Tag Docker images with Build ID'   

    - task: DockerCompose@1
      displayName: 'Push services'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'sc-demo-pipelines-linux-app'
        projectName: '$(imageName)'
        azureContainerRegistry: '{"loginServer":"$(acrName).azurecr.io", "id" : "/subscriptions/edf6dd9d-7c4a-4bca-a997-945f3d60cf4e/resourceGroups/RG-Global-SantanuPanchadhyay-Appteam/providers/Microsoft.ContainerRegistry/registries/$(acrName)"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: $(tag)
