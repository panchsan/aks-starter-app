name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "aksdemoreg"
  AZURE_CONTAINER_REGISTRY_USERNAME: "my-token"
  AZURE_CONTAINER_REGISTRY_PASSWORD: "e0o80c50P7j/ksj8bfG7yjRoj05QWHSmQK0sh5U+Zw+ACRBVqQAK"
  CONTAINER_NAME: "dockerwebapp"
  RESOURCE_GROUP: "RG-Global-SantanuPanchadhyay-Appteam"
  CLUSTER_NAME: "mydemoAKSCluster"
  DEPLOYMENT_NAMESPACE: "my-aks-namespace-github-actions"

jobs:
  # Job 1 : Build and push the image to ACR
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: development
    steps:
      # Checks out the repository this file is in
      
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 8.0.x
          
      # Build .NET application 
      - name: dotnet build
        run: dotnet build docker-web-app/docker-web-app.sln -c release   
        
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}      
  
        # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} . 
    
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # Create K8s secrets to pull images
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v4.0
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: acr-secret
          # Container Registry URL
          container-registry-url: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          # Container Registry user name
          container-registry-username: ${{ env.AZURE_CONTAINER_REGISTRY_USERNAME }}
          # Container Registry password
          container-registry-password: ${{ env.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          # Container Registry email (optional even when using url,username,password)
          container-registry-email: unused
      
      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
          manifests: |
            docker-web-app/manifest/K8s/01_apply_azure_blob_pv.yaml
            docker-web-app/manifest/K8s/02_apply_azure_blob_pvc.yaml
            docker-web-app/manifest/K8s/03_apply_azure_secret_blob.yaml
            docker-web-app/manifest/K8s/04_apply_docker_app_configMap.yaml
            docker-web-app/manifest/K8s/05_apply_docker_app_secret.yaml
            docker-web-app/manifest/K8s/06_apply_docker_app_deployment.yaml
            docker-web-app/manifest/K8s/07_apply_docker_app_service.yaml
            docker-web-app/manifest/K8s/08_apply_sqlserverdb_configMap.yaml
            docker-web-app/manifest/K8s/09_apply_sqlserverdb_deployment.yaml
            docker-web-app/manifest/K8s/10_apply_sqlserverdb-service.yaml
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}    
